package forme.clan;

import domen.Clan;
import domen.Grad;
import domen.Ljubimac;
import domen.Organizacija;
import domen.Zivotinja;
import forme.FrmGlavna;
import java.io.IOException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import komunikacija.Komunikacija;
import transfer.TransferObjekatOdgovor;
import transfer.TransferObjekatZahtev;
import util.Konstante;

/**
 *
 * @author Ivana
 */
public class FrmUnosClana extends javax.swing.JPanel {

    /**
     * Creates new form FrmBrisanjeClana
     */
    Clan clan;
    List<Ljubimac> listaLjubimaca = new ArrayList<>();

    public FrmUnosClana() {
        initComponents();
        inicijalizujKomboBoks();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jtfJmbg = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jtfIme = new javax.swing.JTextField();
        jtfPrezime = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jcbOrganizacija = new javax.swing.JComboBox();
        jLabel7 = new javax.swing.JLabel();
        jcbGrad = new javax.swing.JComboBox();
        jdcDatumRodjenja = new com.toedter.calendar.JDateChooser();
        jdcDatumUclanjenja = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jpLjubimac = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jtfImeLjubimca = new javax.swing.JTextField();
        jcbZivotinja = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jdcDatumSpasavanjaLjubimca = new com.toedter.calendar.JDateChooser();
        jbtDodajLjubimca = new javax.swing.JButton();
        jbtSacuvaj = new javax.swing.JButton();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Unos novog člana", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.BELOW_TOP, new java.awt.Font("Arial", 1, 10))); // NOI18N

        jLabel1.setText("JMBG:");

        jtfJmbg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtfJmbgActionPerformed(evt);
            }
        });

        jLabel2.setText("Ime:");

        jLabel3.setText("Prezime:");

        jLabel5.setText("Datum rodjenja:");

        jLabel6.setText("Organizacija:");

        jLabel7.setText("Mesto rođenja:");

        jLabel8.setText("Datum učlanjenja:");

        jpLjubimac.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED), "Unos ljubimca", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 1, 10), new java.awt.Color(102, 0, 204))); // NOI18N

        jLabel9.setText("Ime ljubimca:");

        jcbZivotinja.setBackground(new java.awt.Color(255, 204, 204));
        jcbZivotinja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcbZivotinjaActionPerformed(evt);
            }
        });

        jLabel10.setText("Životinja:");

        jLabel11.setText("Datum spašavanja:");

        jbtDodajLjubimca.setText("Dodaj novog ljubimca");
        jbtDodajLjubimca.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtDodajLjubimcaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpLjubimacLayout = new javax.swing.GroupLayout(jpLjubimac);
        jpLjubimac.setLayout(jpLjubimacLayout);
        jpLjubimacLayout.setHorizontalGroup(
            jpLjubimacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpLjubimacLayout.createSequentialGroup()
                .addGroup(jpLjubimacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpLjubimacLayout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jbtDodajLjubimca, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpLjubimacLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(jpLjubimacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                        .addGroup(jpLjubimacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jtfImeLjubimca)
                            .addComponent(jcbZivotinja, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jdcDatumSpasavanjaLjubimca, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE))))
                .addGap(39, 39, 39))
        );
        jpLjubimacLayout.setVerticalGroup(
            jpLjubimacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpLjubimacLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpLjubimacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jtfImeLjubimca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jpLjubimacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jcbZivotinja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jpLjubimacLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jdcDatumSpasavanjaLjubimca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtDodajLjubimca)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jbtSacuvaj.setText("Sačuvaj novog člana");
        jbtSacuvaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbtSacuvajActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jpLjubimac, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtfJmbg))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jtfIme, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addGap(10, 10, 10)
                        .addComponent(jtfPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jdcDatumUclanjenja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbOrganizacija, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jdcDatumRodjenja, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jcbGrad, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(jbtSacuvaj, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jtfJmbg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jtfIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jtfPrezime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jdcDatumRodjenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jcbGrad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jcbOrganizacija, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jdcDatumUclanjenja, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jpLjubimac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbtSacuvaj)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jtfJmbgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtfJmbgActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtfJmbgActionPerformed

    private void jcbZivotinjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcbZivotinjaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jcbZivotinjaActionPerformed

    private void jbtSacuvajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtSacuvajActionPerformed
       
         /*
        
         Maticni broj se sastoji od 13 cifara u obliku "DD MM GGG RR BBB K"
         DD - dan rodjenja
         MM - mesec rodjenja
         GGG - godina rodjenja
         RR - Region
         BBB - jedinstveni broj
         K - kontrolni broj koji se izracunava po formuli
        
         Kontrolni broj se izracunava formulom gde je DDMMGGGRRBBBK = ABVGDĐEŽZIJKL
        
         L = 11 - (( 7*(A+E) + 6*(B+Ž) + 5*(V+Z) + 4*(G+I) + 3*(D+J) + 2*(Đ+K) ) % 11)
        
         ako je L izmedju 1i 9 K jednako tom broju L = K,
         ako je L vece od 9 postaje 0
        
         */
        char[] karakteri = jtfJmbg.getText().toCharArray();
        int[] cifre = new int[jtfJmbg.getText().length()];

//        Konverzija stringa u niz cifara
        if (jtfJmbg.getText().length() != 13) {
            JOptionPane.showMessageDialog(jpLjubimac, "Matični broj se sastoji od 13 cifara! \n Proverite unos!");
            return;
      //      throw new RuntimeException("Matični broj se sastoji od 13 cifara! \n Proverite unos!");
           
        } else {
            for (int i = 0; i < karakteri.length; i++) {
                if (Character.isDigit(karakteri[i])) {
                    cifre[i] = Integer.parseInt(Character.toString(karakteri[i]));
                } else {
                    JOptionPane.showMessageDialog(jpLjubimac, "Matični broj se sastoji od 13 cifara! \\n Proverite unos!");
            return;
                    //throw new RuntimeException("Matični broj se sastoji od 13 cifara! \n Proverite unos!");
                }
            }

        }

//        Parsiranje i provera datuma rodjenja
        DateFormat df = new SimpleDateFormat("ddMMyy");
        try {
            String datumString = jtfJmbg.getText().substring(0, 4) + jtfJmbg.getText().substring(5, 7);
            Date datum = df.parse(datumString);
        } catch (ParseException e) {
             JOptionPane.showMessageDialog(jpLjubimac, "Matični broj nije validan!");
             return;
           // throw new RuntimeException("Matični broj nije validan!");
            
        }

////        Racunanje i provera kontrolnog broja
//        int unet = cifre[12];
//
//        int a = cifre[0];
//        int b = cifre[1];
//        int c = cifre[2];
//        int d = cifre[3];
//        int e = cifre[4];
//        int f = cifre[5];
//        int g = cifre[6];
//        int h = cifre[7];
//        int i = cifre[8];
//        int j = cifre[9];
//        int k = cifre[10];
//        int l = cifre[11];
//        int m = cifre[12];
//
//        int izracunat = 11 - ((7 * (a + g) + 6 * (b + h) + 5 * (c + i) + 4 * (d + j) + 3 * (e + k) + 2 * (f + l)) % 11);
//        if (!(izracunat >= 1 && izracunat <= 9)) {
//            izracunat = 0;
//        }
//
//        if (unet != izracunat) {
//           JOptionPane.showMessageDialog(jpLjubimac, "Matični broj nije validan!");
//            return;
//          //  throw new RuntimeException("Matični broj nije validan!");
//        }
//   

        
        
        
        Date datumRodjenja = jdcDatumRodjenja.getDate();
        Date datumUclanjenja = jdcDatumUclanjenja.getDate();
        if (jtfJmbg.getText().isEmpty() || jtfIme.getText().isEmpty() || jtfPrezime.getText().isEmpty() || datumRodjenja == null || datumUclanjenja == null) {
            JOptionPane.showMessageDialog(jpLjubimac, "Morate uneti sva polja na formi", "Cuvanje clana", JOptionPane.WARNING_MESSAGE);
            return;
        }
        clan = new Clan();
        clan.setJmbg(jtfJmbg.getText().trim());
        clan.setIme(jtfIme.getText().trim());
        clan.setPrezime(jtfPrezime.getText().trim());
        clan.setDatumRodjenja(datumRodjenja);
        clan.setDatumUclanjenja(datumUclanjenja);
        clan.setOrganizacija((Organizacija) jcbOrganizacija.getSelectedItem());
        clan.setDrzava((Grad) jcbGrad.getSelectedItem());
        for (Ljubimac ljub : listaLjubimaca) {
            ljub.setVlasnik(clan);
        }
        clan.setListaLjubimaca(listaLjubimaca);

        try {
            TransferObjekatZahtev toz = new TransferObjekatZahtev();
            toz.setOperacija(Konstante.SACUVAJ_CLANA);
            toz.setParametar(clan);
            Komunikacija.vratiObjekat().posaljiZahtev(toz);
            TransferObjekatOdgovor too = Komunikacija.vratiObjekat().procitajOdgovor();
            JOptionPane.showMessageDialog(jpLjubimac, too.getOdgovor() + ": " + clan.getIme() + " " + clan.getPrezime(), "Cuvanje clana", JOptionPane.INFORMATION_MESSAGE);
            listaLjubimaca = new ArrayList<>();
            ocistiFormu();
        } catch (IOException ex) {
            Logger.getLogger(FrmUnosClana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmUnosClana.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jbtSacuvajActionPerformed

    private void jbtDodajLjubimcaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbtDodajLjubimcaActionPerformed
        Date datumSpasavanjaLjubimca = jdcDatumSpasavanjaLjubimca.getDate();
        if (jtfImeLjubimca.getText().isEmpty() || datumSpasavanjaLjubimca == null) {
            JOptionPane.showMessageDialog(jpLjubimac, "Morate uneti sva polja na formi da bi dodali ljubmica", "Dodavanje ljubmica", JOptionPane.WARNING_MESSAGE);
            return;
        }
        String imeLjubimca = jtfImeLjubimca.getText().trim();
        Ljubimac ljubimac = new Ljubimac();
        ljubimac.setImeLjubimca(imeLjubimca);
        ljubimac.setDatumSpasavanja(datumSpasavanjaLjubimca);
        ljubimac.setVrstaZivotinje((Zivotinja) jcbZivotinja.getSelectedItem());
        ljubimac.setLjubimacID(listaLjubimaca.size() + 1);
        listaLjubimaca.add(ljubimac);
        JOptionPane.showMessageDialog(jpLjubimac, "Uspesno ste uneli ljubimca : " + ljubimac.getImeLjubimca(), imeLjubimca, WIDTH);

    }//GEN-LAST:event_jbtDodajLjubimcaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JButton jbtDodajLjubimca;
    private javax.swing.JButton jbtSacuvaj;
    private javax.swing.JComboBox jcbGrad;
    private javax.swing.JComboBox jcbOrganizacija;
    private javax.swing.JComboBox jcbZivotinja;
    private com.toedter.calendar.JDateChooser jdcDatumRodjenja;
    private com.toedter.calendar.JDateChooser jdcDatumSpasavanjaLjubimca;
    private com.toedter.calendar.JDateChooser jdcDatumUclanjenja;
    private javax.swing.JPanel jpLjubimac;
    private javax.swing.JTextField jtfIme;
    private javax.swing.JTextField jtfImeLjubimca;
    private javax.swing.JTextField jtfJmbg;
    private javax.swing.JTextField jtfPrezime;
    // End of variables declaration//GEN-END:variables

    private void inicijalizujKomboBoks() {

        try {
            TransferObjekatZahtev toZahtev = new TransferObjekatZahtev();
            toZahtev.setOperacija(Konstante.VRATI_SVE_ORGANIZACIJE);
            Komunikacija.vratiObjekat().posaljiZahtev(toZahtev);
            TransferObjekatOdgovor toOdgovor = Komunikacija.vratiObjekat().procitajOdgovor();
            List<Organizacija> listaOrganizacija = (List<Organizacija>) toOdgovor.getRezultat();
            for (Organizacija o : listaOrganizacija) {
                jcbOrganizacija.addItem(o);
            }

            System.out.println(toOdgovor.getOdgovor());

            toZahtev = new TransferObjekatZahtev();
            toZahtev.setOperacija(Konstante.VRATI_SVE_GRADOVE);
            Komunikacija.vratiObjekat().posaljiZahtev(toZahtev);
            toOdgovor = Komunikacija.vratiObjekat().procitajOdgovor();
            List<Grad> listaGradova = (List<Grad>) toOdgovor.getRezultat();
            for (Grad g : listaGradova) {
                jcbGrad.addItem(g);
            }

            System.out.println(toOdgovor.getOdgovor());

            toZahtev = new TransferObjekatZahtev();
            toZahtev.setOperacija(Konstante.VRATI_SVE_ZIVOTINJE);
            Komunikacija.vratiObjekat().posaljiZahtev(toZahtev);
            toOdgovor = Komunikacija.vratiObjekat().procitajOdgovor();
            List<Zivotinja> listaZivotinja = (List<Zivotinja>) toOdgovor.getRezultat();
            for (Zivotinja z : listaZivotinja) {
                jcbZivotinja.addItem(z);
            }

            System.out.println(toOdgovor.getOdgovor());

        } catch (IOException ex) {
            Logger.getLogger(FrmUnosClana.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FrmUnosClana.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void ocistiFormu() {
        jtfJmbg.setText("");
        jtfIme.setText("");
        jtfPrezime.setText("");
        jdcDatumRodjenja.setDate(null);
        jdcDatumSpasavanjaLjubimca.setDate(null);
        jdcDatumUclanjenja.setDate(null);

    }
}
